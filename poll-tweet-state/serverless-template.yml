service: poll-tweet-state-__SERVERLESS_USER__

frameworkVersion: ">=1.28.0 <2.0.0"

provider:
  name: aws
  runtime: go1.x
  memorySize: 128
  stage: ${env:SERVERLESS_STAGE}
  region: ${env:AWS_REGION}
  tags:
    project: sls-demo-__SERVERLESS_USER__
    owner: __SERVERLESS_USER__
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:GetObject
      Resource: "arn:aws:s3:::${env:TWITTER_STATE_BUCKET}/*"
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
      Resource: "*"
  environment:
    SERVERLESS_USER: ${env:SERVERLESS_USER}
    TWITTER_STATE_BUCKET: ${env:TWITTER_STATE_BUCKET}
    TWITTER_STATE_FILE: ${env:TWITTER_STATE_FILE}
    TWITTER_STATE_TYPE: ${env:TWITTER_STATE_TYPE}
    TWITTER_STATE_TABLE: ${env:TWITTER_STATE_TABLE}

package:
 exclude:
   - ./**
 include:
   - ./bin/**

functions:
  read:
    handler: bin/read
  update:
    handler: bin/update

resources:
  Resources:
    DynamoDbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${env:TWITTER_STATE_TABLE}
        AttributeDefinitions:
          - AttributeName: namespace
            AttributeType: S
          - AttributeName: version
            AttributeType: N
        KeySchema:
          - AttributeName: namespace
            KeyType: HASH
          - AttributeName: version
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    DynamoDbIamPolicy:
      Type: AWS::IAM::Policy
      DependsOn: DynamoDbTable
      Properties:
        PolicyName: lambda-dynamodb
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:PutItem
                - dynamodb:Query
                - dynamodb:Scan
              Resource: arn:aws:dynamodb:eu-central-1:${env:AWS_ACCOUNT_ID}:table/${env:TWITTER_STATE_TABLE}
        Roles:
          - Ref: IamRoleLambdaExecution

